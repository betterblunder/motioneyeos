name: Build Board Images
on: [push]
jobs:
  create-build-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}
      - name: build docker image
        run: docker build . --tag ghcr.io/${{ github.actor }}/motioneyeos-builder:latest
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: push docker image to registry
        run: docker push ghcr.io/${{ github.actor }}/motioneyeos-builder:latest

  build-board-images:
    strategy:
      matrix:
        board_name:
          #           - bananapim1
          #           - nanopineo2
          #           - nanopineo
          #           - nanopir1
          #           - odroidxu4
          #           - orangepione
          #           - orangepizero
          #           - raspberrypi2
          #           - raspberrypi3
          - raspberrypi4
          #           - raspberrypi
          #           - tinkerboard
    runs-on: ubuntu-latest
    needs: create-build-container
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build artifacts
        run: ./docker-build.sh -i ghcr.io/${{ github.actor }}/motioneyeos-builder:latest boards
        # run: ./docker-build.sh -i ghcr.io/${{ github.actor }}/motioneyeos-builder:latest ${{ matrix.board_name }}
      - name: generate release images
        # run: sudo ./build.sh boards
        run: >
          sudo mkdir -p output/${{ matrix.board_name }}/images &&
          sudo touch output/${{ matrix.board_name }}/images/board.img &&
          sudo touch output/${{ matrix.board_name }}/images//${{ matrix.board_name }}-foo.img &&
          sudo touch output/${{ matrix.board_name }}/images//${{ matrix.board_name }}-foo.xz
